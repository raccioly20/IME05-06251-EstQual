---
title: "Carregando dados, Manipulando e Visualizando"
author: "Ricardo Accioly"
date: ' `r Sys.Date()` '
format:
 html:
    code-link: true
    fig-width: 9
    fig-height: 7
    fig-dpi: 300
knitr:
  opts_chunk: 
    out.width: 90%
    comment: "#>"
execute:
  freeze: auto
---

## Entrada de dados no R

## Carregando dados

```{r qcc}
#| message: false
library(qcc)
library(tidyverse)
data(pistonrings)
```

## Explorando os dados

```{r}
head(pistonrings)
summary(pistonrings)
```

## Manipulando os dados

```{r}
aneisdepistao <- pistonrings %>% 
  rename(diametro = diameter, amostra = sample, fase1 = trial)
```

## Visualizando - Histograma

```{r}
ggplot(aneisdepistao, aes(x = diametro)) +
  geom_histogram(bins = round(1+3.322*log10(nrow(aneisdepistao)),0), fill = "blue", color = "black") +
  labs(title = "Histograma dos diâmetros dos anéis de pistão",
       x = "Diâmetro",
       y = "Frequência")
```

## Visualizando - Box-Plot

```{r}
ggplot(aneisdepistao, aes(x = diametro)) +
  geom_boxplot() +
  labs(title = "Box-Plot dos diâmetros dos anéis de pistão")
```

## Visualizando - Gráfico de corrida

```{r}
media <- aneisdepistao %>% filter(fase1==T) %>% group_by(amostra) %>% summarise(media = mean(diametro))

ggplot(media, aes(x = amostra, y = media)) +
  geom_point() +
  geom_line() +
  labs(title = "Diâmetro médio dos anéis de pistão",
       x = "Amostra",
       y = "Diâmetro")
```

```{r}

aneisdepistao %>% filter(fase1==T) %>% ggplot(aes(x = as.factor(amostra), y = diametro)) +
  geom_boxplot() +
  labs(title = "Box-Plots dos diametros dos anéis de pistão por amostra",
       x = "Amostra",
       y = "Diâmetro")
```

## Resumo dos dados

```{r}
library(datawizard)
describe_distribution(aneisdepistao)

```

## Comparando Histograma, Box-Plot e Violino

```{r}
set.seed(2024)
dados <- data.frame(x=rnorm(10000, 10, 1), y= rep("A",10000))

library(ggplot2)
library(patchwork)
g1 <- ggplot(dados, aes(x=x)) + geom_histogram()
g2 <- ggplot(dados, aes(x=x)) + geom_boxplot()
g3 <- ggplot(dados, aes(x=x, y=y)) + geom_violin(draw_quantiles = c(0.25, 0.5, 0.75))
g1 / g2 / g3
```
