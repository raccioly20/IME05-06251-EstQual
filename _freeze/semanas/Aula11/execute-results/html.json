{
  "hash": "838180fc3657273e61db6e7e9bc6e5bb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"PAAD\"\nauthor: \"Ricardo Accioly\"\ndate: ' 2025-05-28 '\nformat:\n html:\n    code-link: true\n    fig-width: 9\n    fig-height: 7\n    fig-dpi: 300\nknitr:\n  opts_chunk: \n    out.width: 90%\n    comment: \"#>\"\nexecute:\n  freeze: auto\n---\n\n## Biblioteca\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(AcceptanceSampling)\n```\n:::\n\n\n## PAAD - Poisson\n\nNeste caso não podemos mais usar a função find.plan, pois ela só serve para os PAAS.\n\nAqui vamos precisar de usar a tabela de Schilling e Johnson para definir o plano de auditoria.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# p1=0,01\n# p2 = 0,05\n# alfa = 0.05\n# beta = 0.10\n# p2/p1 = 5\n# Plano 3D a1=1 a2=4 r1=4 e r2=5 n1=n2=88\npaad <- OC2c(n=c(88,88),c=c(1,4),r=c(4,5),type=\"poisson\",pd=seq(0,.15,.01))\nassess(paad,PRP=c(.01,.95),CRP=c(.05,.10))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> Acceptance Sampling Plan (poisson)\n#> \n#>                Sample 1 Sample 2\n#> Sample size(s)       88       88\n#> Acc. Number(s)        1        4\n#> Rej. Number(s)        4        5\n#> \n#> Plan CAN meet desired risk point(s):\n#> \n#>            Quality   RP P(accept) Plan P(accept)\n#> PRP           0.01           0.95     0.96755953\n#> CRP           0.05           0.10     0.09985685\n```\n\n\n:::\n:::\n\n\n## CCO - PAAD\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\ncco_paad <- data.frame(pd=paad@pd, Pa=paad@paccept)\n# Grafico de CCO\nggplot(cco_paad, aes(x=pd, y=Pa)) +\n  geom_line() +\n  labs(title=\"Curva de CCO - PAAD\",\n       x=\"Proporção de Não Conformes (pd)\",\n       y=\"Probabilidade de Aceitação (Pa)\") +\n  theme_minimal() +\n  scale_x_continuous(breaks=seq(0, 0.15, by=0.01)) +\n  scale_y_continuous(breaks=seq(0, 1, by=0.1))\n```\n\n::: {.cell-output-display}\n![](Aula11_files/figure-html/unnamed-chunk-3-1.png){width=90%}\n:::\n:::\n\n",
    "supporting": [
      "Aula11_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}